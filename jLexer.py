# Generated from /Users/augusto/PycharmProjects/AnalisadorSemantico/j.g4 by ANTLR 4.7
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\66")
        buf.write("\u0165\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3")
        buf.write("\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"")
        buf.write("\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3")
        buf.write("&\3\'\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+\3+\3+\3,\3")
        buf.write(",\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3")
        buf.write("/\3/\3/\3\60\3\60\3\61\6\61\u0140\n\61\r\61\16\61\u0141")
        buf.write("\3\61\3\61\6\61\u0146\n\61\r\61\16\61\u0147\5\61\u014a")
        buf.write("\n\61\3\62\6\62\u014d\n\62\r\62\16\62\u014e\3\63\3\63")
        buf.write("\3\63\7\63\u0154\n\63\f\63\16\63\u0157\13\63\5\63\u0159")
        buf.write("\n\63\3\64\3\64\3\65\3\65\3\66\6\66\u0160\n\66\r\66\16")
        buf.write("\66\u0161\3\66\3\66\2\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\2a\61c\62")
        buf.write("e\63g\64i\65k\66\3\2\7\3\2\62;\4\2..\60\60\4\2C\\c|\3")
        buf.write("\2\63;\5\2\13\f\17\17\"\"\2\u016a\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write("\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3")
        buf.write("m\3\2\2\2\5u\3\2\2\2\7w\3\2\2\2\t~\3\2\2\2\13\u0080\3")
        buf.write("\2\2\2\r\u0087\3\2\2\2\17\u0091\3\2\2\2\21\u0099\3\2\2")
        buf.write("\2\23\u00a0\3\2\2\2\25\u00a9\3\2\2\2\27\u00af\3\2\2\2")
        buf.write("\31\u00b7\3\2\2\2\33\u00b9\3\2\2\2\35\u00bb\3\2\2\2\37")
        buf.write("\u00c0\3\2\2\2!\u00c6\3\2\2\2#\u00c8\3\2\2\2%\u00cb\3")
        buf.write("\2\2\2\'\u00d0\3\2\2\2)\u00d6\3\2\2\2+\u00dd\3\2\2\2-")
        buf.write("\u00df\3\2\2\2/\u00e1\3\2\2\2\61\u00e3\3\2\2\2\63\u00eb")
        buf.write("\3\2\2\2\65\u00f0\3\2\2\2\67\u00f4\3\2\2\29\u00f6\3\2")
        buf.write("\2\2;\u00f8\3\2\2\2=\u00fb\3\2\2\2?\u00fe\3\2\2\2A\u0101")
        buf.write("\3\2\2\2C\u0103\3\2\2\2E\u0106\3\2\2\2G\u0111\3\2\2\2")
        buf.write("I\u0113\3\2\2\2K\u0115\3\2\2\2M\u0117\3\2\2\2O\u011a\3")
        buf.write("\2\2\2Q\u011c\3\2\2\2S\u011f\3\2\2\2U\u0121\3\2\2\2W\u0126")
        buf.write("\3\2\2\2Y\u012c\3\2\2\2[\u0131\3\2\2\2]\u0137\3\2\2\2")
        buf.write("_\u013c\3\2\2\2a\u013f\3\2\2\2c\u014c\3\2\2\2e\u0158\3")
        buf.write("\2\2\2g\u015a\3\2\2\2i\u015c\3\2\2\2k\u015f\3\2\2\2mn")
        buf.write("\7r\2\2no\7c\2\2op\7e\2\2pq\7m\2\2qr\7c\2\2rs\7i\2\2s")
        buf.write("t\7g\2\2t\4\3\2\2\2uv\7=\2\2v\6\3\2\2\2wx\7k\2\2xy\7o")
        buf.write("\2\2yz\7r\2\2z{\7q\2\2{|\7t\2\2|}\7v\2\2}\b\3\2\2\2~\177")
        buf.write("\7.\2\2\177\n\3\2\2\2\u0080\u0081\7r\2\2\u0081\u0082\7")
        buf.write("w\2\2\u0082\u0083\7d\2\2\u0083\u0084\7n\2\2\u0084\u0085")
        buf.write("\7k\2\2\u0085\u0086\7e\2\2\u0086\f\3\2\2\2\u0087\u0088")
        buf.write("\7r\2\2\u0088\u0089\7t\2\2\u0089\u008a\7q\2\2\u008a\u008b")
        buf.write("\7v\2\2\u008b\u008c\7g\2\2\u008c\u008d\7e\2\2\u008d\u008e")
        buf.write("\7v\2\2\u008e\u008f\7g\2\2\u008f\u0090\7f\2\2\u0090\16")
        buf.write("\3\2\2\2\u0091\u0092\7r\2\2\u0092\u0093\7t\2\2\u0093\u0094")
        buf.write("\7k\2\2\u0094\u0095\7x\2\2\u0095\u0096\7c\2\2\u0096\u0097")
        buf.write("\7v\2\2\u0097\u0098\7g\2\2\u0098\20\3\2\2\2\u0099\u009a")
        buf.write("\7u\2\2\u009a\u009b\7v\2\2\u009b\u009c\7c\2\2\u009c\u009d")
        buf.write("\7v\2\2\u009d\u009e\7k\2\2\u009e\u009f\7e\2\2\u009f\22")
        buf.write("\3\2\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2\7d\2\2\u00a2\u00a3")
        buf.write("\7u\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6")
        buf.write("\7c\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7e\2\2\u00a8\24")
        buf.write("\3\2\2\2\u00a9\u00aa\7e\2\2\u00aa\u00ab\7n\2\2\u00ab\u00ac")
        buf.write("\7c\2\2\u00ac\u00ad\7u\2\2\u00ad\u00ae\7u\2\2\u00ae\26")
        buf.write("\3\2\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7z\2\2\u00b1\u00b2")
        buf.write("\7v\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5")
        buf.write("\7f\2\2\u00b5\u00b6\7u\2\2\u00b6\30\3\2\2\2\u00b7\u00b8")
        buf.write("\7}\2\2\u00b8\32\3\2\2\2\u00b9\u00ba\7\177\2\2\u00ba\34")
        buf.write("\3\2\2\2\u00bb\u00bc\7x\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be")
        buf.write("\7k\2\2\u00be\u00bf\7f\2\2\u00bf\36\3\2\2\2\u00c0\u00c1")
        buf.write("\7v\2\2\u00c1\u00c2\7{\2\2\u00c2\u00c3\7r\2\2\u00c3\u00c4")
        buf.write("\7g\2\2\u00c4\u00c5\7\64\2\2\u00c5 \3\2\2\2\u00c6\u00c7")
        buf.write("\7<\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca")
        buf.write("\7h\2\2\u00ca$\3\2\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd")
        buf.write("\7n\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf\7g\2\2\u00cf&\3")
        buf.write("\2\2\2\u00d0\u00d1\7y\2\2\u00d1\u00d2\7j\2\2\u00d2\u00d3")
        buf.write("\7k\2\2\u00d3\u00d4\7n\2\2\u00d4\u00d5\7g\2\2\u00d5(\3")
        buf.write("\2\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9")
        buf.write("\7v\2\2\u00d9\u00da\7w\2\2\u00da\u00db\7t\2\2\u00db\u00dc")
        buf.write("\7p\2\2\u00dc*\3\2\2\2\u00dd\u00de\7*\2\2\u00de,\3\2\2")
        buf.write("\2\u00df\u00e0\7+\2\2\u00e0.\3\2\2\2\u00e1\u00e2\7?\2")
        buf.write("\2\u00e2\60\3\2\2\2\u00e3\u00e4\7d\2\2\u00e4\u00e5\7q")
        buf.write("\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8")
        buf.write("\7g\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea\7p\2\2\u00ea\62")
        buf.write("\3\2\2\2\u00eb\u00ec\7e\2\2\u00ec\u00ed\7j\2\2\u00ed\u00ee")
        buf.write("\7c\2\2\u00ee\u00ef\7t\2\2\u00ef\64\3\2\2\2\u00f0\u00f1")
        buf.write("\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7v\2\2\u00f3\66")
        buf.write("\3\2\2\2\u00f4\u00f5\7]\2\2\u00f58\3\2\2\2\u00f6\u00f7")
        buf.write("\7_\2\2\u00f7:\3\2\2\2\u00f8\u00f9\7-\2\2\u00f9\u00fa")
        buf.write("\7?\2\2\u00fa<\3\2\2\2\u00fb\u00fc\7(\2\2\u00fc\u00fd")
        buf.write("\7(\2\2\u00fd>\3\2\2\2\u00fe\u00ff\7?\2\2\u00ff\u0100")
        buf.write("\7?\2\2\u0100@\3\2\2\2\u0101\u0102\7@\2\2\u0102B\3\2\2")
        buf.write("\2\u0103\u0104\7>\2\2\u0104\u0105\7?\2\2\u0105D\3\2\2")
        buf.write("\2\u0106\u0107\7k\2\2\u0107\u0108\7p\2\2\u0108\u0109\7")
        buf.write("u\2\2\u0109\u010a\7v\2\2\u010a\u010b\7c\2\2\u010b\u010c")
        buf.write("\7p\2\2\u010c\u010d\7e\2\2\u010d\u010e\7g\2\2\u010e\u010f")
        buf.write("\7q\2\2\u010f\u0110\7h\2\2\u0110F\3\2\2\2\u0111\u0112")
        buf.write("\7-\2\2\u0112H\3\2\2\2\u0113\u0114\7/\2\2\u0114J\3\2\2")
        buf.write("\2\u0115\u0116\7,\2\2\u0116L\3\2\2\2\u0117\u0118\7-\2")
        buf.write("\2\u0118\u0119\7-\2\2\u0119N\3\2\2\2\u011a\u011b\7#\2")
        buf.write("\2\u011bP\3\2\2\2\u011c\u011d\7/\2\2\u011d\u011e\7/\2")
        buf.write("\2\u011eR\3\2\2\2\u011f\u0120\7\60\2\2\u0120T\3\2\2\2")
        buf.write("\u0121\u0122\7v\2\2\u0122\u0123\7j\2\2\u0123\u0124\7k")
        buf.write("\2\2\u0124\u0125\7u\2\2\u0125V\3\2\2\2\u0126\u0127\7u")
        buf.write("\2\2\u0127\u0128\7w\2\2\u0128\u0129\7r\2\2\u0129\u012a")
        buf.write("\7g\2\2\u012a\u012b\7t\2\2\u012bX\3\2\2\2\u012c\u012d")
        buf.write("\7v\2\2\u012d\u012e\7t\2\2\u012e\u012f\7w\2\2\u012f\u0130")
        buf.write("\7g\2\2\u0130Z\3\2\2\2\u0131\u0132\7h\2\2\u0132\u0133")
        buf.write("\7c\2\2\u0133\u0134\7n\2\2\u0134\u0135\7u\2\2\u0135\u0136")
        buf.write("\7g\2\2\u0136\\\3\2\2\2\u0137\u0138\7p\2\2\u0138\u0139")
        buf.write("\7w\2\2\u0139\u013a\7n\2\2\u013a\u013b\7n\2\2\u013b^\3")
        buf.write("\2\2\2\u013c\u013d\t\2\2\2\u013d`\3\2\2\2\u013e\u0140")
        buf.write("\5_\60\2\u013f\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141")
        buf.write("\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0149\3\2\2\2")
        buf.write("\u0143\u0145\t\3\2\2\u0144\u0146\5_\60\2\u0145\u0144\3")
        buf.write("\2\2\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148")
        buf.write("\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u0143\3\2\2\2\u0149")
        buf.write("\u014a\3\2\2\2\u014ab\3\2\2\2\u014b\u014d\t\4\2\2\u014c")
        buf.write("\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2\2\2")
        buf.write("\u014e\u014f\3\2\2\2\u014fd\3\2\2\2\u0150\u0159\7\62\2")
        buf.write("\2\u0151\u0155\t\5\2\2\u0152\u0154\t\2\2\2\u0153\u0152")
        buf.write("\3\2\2\2\u0154\u0157\3\2\2\2\u0155\u0153\3\2\2\2\u0155")
        buf.write("\u0156\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0155\3\2\2\2")
        buf.write("\u0158\u0150\3\2\2\2\u0158\u0151\3\2\2\2\u0159f\3\2\2")
        buf.write("\2\u015a\u015b\3\2\2\2\u015bh\3\2\2\2\u015c\u015d\3\2")
        buf.write("\2\2\u015dj\3\2\2\2\u015e\u0160\t\6\2\2\u015f\u015e\3")
        buf.write("\2\2\2\u0160\u0161\3\2\2\2\u0161\u015f\3\2\2\2\u0161\u0162")
        buf.write("\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0164\b\66\2\2\u0164")
        buf.write("l\3\2\2\2\n\2\u0141\u0147\u0149\u014e\u0155\u0158\u0161")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class jLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    NUMBER = 47
    ID = 48
    INT_LITERAL = 49
    CHAR_LITERAL = 50
    STRING_LITERAL = 51
    WS = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'package'", "';'", "'import'", "','", "'public'", "'protected'", 
            "'private'", "'static'", "'abstratc'", "'class'", "'extends'", 
            "'{'", "'}'", "'void'", "'type2'", "':'", "'if'", "'else'", 
            "'while'", "'return'", "'('", "')'", "'='", "'boolean'", "'char'", 
            "'int'", "'['", "']'", "'+='", "'&&'", "'=='", "'>'", "'<='", 
            "'instanceof'", "'+'", "'-'", "'*'", "'++'", "'!'", "'--'", 
            "'.'", "'this'", "'super'", "'true'", "'false'", "'null'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "ID", "INT_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "DIGIT", "NUMBER", "ID", "INT_LITERAL", 
                  "CHAR_LITERAL", "STRING_LITERAL", "WS" ]

    grammarFileName = "j.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


